# VISUALCROSSING (expires ??)
VISUALCROSSING_KEY=Y9R9YNTCNTA2U5MXG8PPLQZ6R
# AstrologyAPI (expires ??)
ASTRO_API_USERNAME=624384
ASTRO_API_KEY=fdbe497bf4177a13e25eba583f63e050

# # Cloudinary
# CLOUDINARY_URL=cloudinary://554983178755321:u40Z1WWdQLJKNtM6GMPLfWj6Jtw@daxtfj13g
# CLOUDINARY_CLOUD_NAME=daxtfj13g
# CLOUDINARY_API_KEY=554983178755321
# CLOUDINARY_API_SECRET=u40Z1WWdQLJKNtM6GMPLfWj6Jtw

# KOYEB DATABASE (PostgreSQL)
# DATABASE_URL=postgres://koyeb-adm:P6gBU1zuqmix@ep-snowy-mouse-a2b9ts51.eu-central-1.pg.koyeb.app/koyebdb

# # RENDER DATABASE (PostgreSQL)
# # internal database url
# DATABASE_URL=postgres://dailymoon_user:5UlWtTBAzeXOZPz75wDRbGEq4Hqrnb2U@dpg-cn63g86n7f5s73ejm9qg-a/dailymoon
# RAILS_MASTER_KEY=
# WEB_CONCURRENCY=2

# # External_database_url=postgres://dailymoon_user:5UlWtTBAzeXOZPz75wDRbGEq4Hqrnb2U@dpg-cn63g86n7f5s73ejm9qg-a.frankfurt-postgres.render.com/dailymoon
# # PASSWORD=5UlWtTBAzeXOZPz75wDRbGEq4Hqrnb2U
# # psql command: PGPASSWORD=5UlWtTBAzeXOZPz75wDRbGEq4Hqrnb2U psql -h dpg-cn63g86n7f5s73ejm9qg-a.frankfurt-postgres.render.com -U dailymoon_user dailymoon

# # DEPLOYMENT INSTRUCTIONS FOR RENDER
# # Select Ruby for the web service’s runtime and set the following properties:

# # Property	            Value
# # Build Command	        ./bin/render-build.sh
# # Pre-deploy Command*	./bin/rails db:migrate
# # Start Command	        ./bin/rails server

# # *The pre-deploy command is available only for paid instance types. If you’re running on the Free instance type, you can include a database migration step in your build command.

# # Set the following environment variables for the web service:

# # Key	            Value
# # DATABASE_URL	    The internal database URL for the database you created above
# # RAILS_MASTER_KEY	Paste contents of the config/master.key file
# # WEB_CONCURRENCY	2
# # That’s it! You can now finalize your service deployment. It will be live on your .onrender.com URL as soon as the initial build and deploy are complete.